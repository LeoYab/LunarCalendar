{"version":3,"sources":["components/LunarCalendar.js","app.js","index.js"],"names":["LunarCalendar","date","setDate","useState","Date","lunarPhase","setLunarPhase","lunarPhasesInSpanish","useEffect","fetchLunarPhase","async","unixDate","Math","floor","getTime","_response$data$","phase","axios","get","data","Phase","error","console","_jsxs","className","children","_jsx","Calendar","onChange","value","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"2QAsDeA,MAjDOA,KACpB,MAAOC,EAAMC,GAAWC,mBAAS,IAAIC,OAC9BC,EAAYC,GAAiBH,mBAAS,IAGvCI,EAAuB,CAC3B,WAAY,aACZ,kBAAmB,uBACnB,gBAAiB,mBACjB,iBAAkB,oBAClB,YAAa,aACb,iBAAkB,mBAClB,eAAgB,mBAChB,kBAAmB,uBAGrBC,qBAAU,KACRC,EAAgBR,EAAK,GACpB,CAACA,IAGJ,MAAMQ,EAAkBC,UACtB,MAAMC,EAAWC,KAAKC,MAAMZ,EAAKa,UAAY,KAC7C,IAAK,IAADC,EACF,MACMC,EAAwB,QAAnBD,SADYE,IAAMC,IAAI,6CAA6CP,MACvDQ,KAAK,UAAE,IAAAJ,OAAA,EAAhBA,EAAkBK,MAGhCd,EADwBC,EAAqBS,IAAU,mBAEzD,CAAE,MAAOK,GACPC,QAAQD,MAAM,8BAA+BA,GAC7Cf,EAAc,6BAChB,GAOF,OACEiB,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CACjCC,cAAA,MAAAD,SAAI,0BACJC,cAACC,IAAQ,CAACC,SAPI3B,IAChBC,EAAQD,EAAK,EAMmB4B,MAAO5B,IAErCsB,eAAA,MAAAE,SAAA,CAAI,eAAapB,GAAc,qBAC3B,ECnCKyB,MAXf,WACE,OACEP,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,UAAQF,UAAU,aAAYC,SAC5BC,cAAA,MAAAD,SAAI,uBAENC,cAAC1B,EAAa,MAGpB,ECRA+B,IAASC,OACPN,cAACO,IAAMC,WAAU,CAAAT,SACfC,cAACI,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.171c2c21.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport axios from 'axios';\r\n\r\nconst LunarCalendar = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [lunarPhase, setLunarPhase] = useState('');\r\n\r\n  // Diccionario para traducir las fases lunares al español\r\n  const lunarPhasesInSpanish = {\r\n    \"New Moon\": \"Luna Nueva\",\r\n    \"Waxing Crescent\": \"Creciente Iluminante\",\r\n    \"First Quarter\": \"Cuarto Creciente\",\r\n    \"Waxing Gibbous\": \"Gibosa Iluminante\",\r\n    \"Full Moon\": \"Luna Llena\",\r\n    \"Waning Gibbous\": \"Gibosa Menguante\",\r\n    \"Last Quarter\": \"Cuarto Menguante\",\r\n    \"Waning Crescent\": \"Creciente Menguante\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLunarPhase(date);\r\n  }, [date]);\r\n\r\n  // Función para obtener la fase lunar desde la API de Farmsense\r\n  const fetchLunarPhase = async (date) => {\r\n    const unixDate = Math.floor(date.getTime() / 1000);  // Convertir la fecha a formato Unix\r\n    try {\r\n      const response = await axios.get(`http://api.farmsense.net/v1/moonphases/?d=${unixDate}`);\r\n      const phase = response.data[0]?.Phase;  // La fase lunar viene en el campo 'Phase'\r\n      // Traducir la fase lunar al español\r\n      const translatedPhase = lunarPhasesInSpanish[phase] || \"Fase desconocida\";\r\n      setLunarPhase(translatedPhase);\r\n    } catch (error) {\r\n      console.error(\"Error fetching lunar phase:\", error);\r\n      setLunarPhase(\"Error obteniendo los datos\");\r\n    }\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setDate(date);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Calendar-container\">\r\n      <h2>Selecciona una fecha:</h2>\r\n      <Calendar onChange={onChange} value={date} />\r\n   {/*    <h2>Fecha seleccionada: {date.toDateString()}</h2> */}\r\n      <h2>Fase Lunar: {lunarPhase || \"Obteniendo...\"}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LunarCalendar;\r\n","import React from 'react';\r\nimport './app.css';\r\nimport LunarCalendar from './components/LunarCalendar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Calendario Lunar</h1>\r\n      </header>\r\n      <LunarCalendar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}